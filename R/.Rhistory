runApp()
coin_history(coin_id = "usdt",
vs_currency = "usd",
days = 1)
x <- coin_history(coin_id = c("ripple"),
vs_currency = "usd",
days = 1)
View(x)
x %>%
mutate(
timestamp = with_tz(timestamp, "America/New_York")
)
x
runApp()
runApp()
x <- coin_history(coin_id = c("tether"),
vs_currency = "usd",
days = 1)
# list from https://stockanalysis.com/stocks/
coins <- read_csv("data/coins.csv")
View(coins)
x <- coin_history(coin_id = c("tether"),
vs_currency = "usd",
days = 1)
View(x)
x %>%
mutate(
timestamp = with_tz(timestamp, "America/New_York")
) %>%  View()
runApp()
with_tz(Sys.Date(), "America/New_York")
with_tz(Sys.Date(), "America/New_York")
Sys.Date()
Sys.time()
with_tz(Sys.time(), "America/New_York")
?as.Date
runApp()
View(coins)
x <- coin_history(coin_id = c("tether", "usd-coin"),
vs_currency = "usd",
days = 1)
x %>%
mutate(
timestamp = with_tz(timestamp, "America/New_York")
) %>%  View()
x %>%
mutate(
timestamp = with_tz(timestamp, "America/New_York")
) %>%
select(
timestamp, coin_id, price
)
x %>%
mutate(
timestamp = with_tz(timestamp, "America/New_York")
) %>%
select(
timestamp, coin_id, price
) %>%
spread(
key = coin_id,
value = price
)
library(clipr)
x %>%
mutate(
timestamp = with_tz(timestamp, "America/New_York")
) %>%
select(
timestamp, coin_id, price
) %>%
spread(
key = coin_id,
value = price
) %>%
write_clip()
Sys.setenv(TZ='GMT')
Sys.time()
Sys.setenv(TZ="America/New_York")
Sys.time()
runApp()
runApp()
start_date = as.Date("2022-05-12", format="%Y-%m-%d")
end_date = as.Date("2022-05-11", format="%Y-%m-%d")
days <- Sys.time() - start_date
Sys.time()
Sys.time() - 1
Sys.time() - 100
runApp()
runApp()
runApp()
shiny::runApp()
setwd("~/Documents/GitHub/personal projects/mwy-farewell-tracker/R")
library(httr)
library(jsonlite)
url_list <- list()
songs <- bind_rows(valence_list) %>% distinct()
library(readr)
library(dplyr)
request_song_info <- function(song_name, artist) {
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
# print(hits)
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
return(url)
}
url_list <- list()
# Manual fix names
songs <- read_csv("songs-73.csv")
View(songs)
for (i in 1:nrow(songs)) {
print(i)
row <- songs[i,]
try({
song <- row$song
artist <- row$artist
print(paste0("Getting url for '", song, "' by ", artist))
url <- request_song_info(song, artist)
print(url)
x <- tibble(
song,
artist,
url
)
url_list[[length(url_list) + 1]] <- x
})
}
genius_token
genius_token <- 'KXIhV_H79xaewh4OGUfPMjlKhM7oiN9604C7AcagP8qvhR-OHwjBYecKV1sUINsU1_xhwnFA3qhXCl95e6NX1A'
request_song_info <- function(song_name, artist) {
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
# print(hits)
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
return(url)
}
url_list <- list()
# Manual fix names
songs <- read_csv("songs-73.csv")
for (i in 1:nrow(songs)) {
print(i)
row <- songs[i,]
try({
song <- row$song
artist <- row$artist
print(paste0("Getting url for '", song, "' by ", artist))
url <- request_song_info(song, artist)
print(url)
x <- tibble(
song,
artist,
url
)
url_list[[length(url_list) + 1]] <- x
})
}
i <- 1
row <- songs[i,]
song <- row$song
artist <- row$artist
print(paste0("Getting url for '", song, "' by ", artist))
url <- request_song_info(song, artist)
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
song_name <- song
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
row$result$url
row <- res_json$response$hits[i,]
row
hits
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
search_url
res <- GET(search_url, add_headers(headers))
res
res$status_code
res <- GET(search_url, add_headers(headers))
genius_token <- 'SoVVdhVLw6sLyt9MHHtImzYkwDWV2IUd3LhFBGjxgxvV3UYiDWPVLlcyNeBLY_eR'
request_song_info <- function(song_name, artist) {
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
# print(hits)
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
return(url)
}
url_list <- list()
# Manual fix names
songs <- read_csv("songs-73.csv")
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
genius_token <- 'KXIhV_H79xaewh4OGUfPMjlKhM7oiN9604C7AcagP8qvhR-OHwjBYecKV1sUINsU1_xhwnFA3qhXCl95e6NX1A'
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
res <- GET(search_url, add_headers(headers))
res
genius_token <- 'tsTt2DW5PR8BDNPejt_whgXOSFGXq559AEFeRbC80js_OI63uCV3K1KCVoKNyYKC'
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res
library(geniusr)
get_lyrics_search(artist_name = "Kanye West",
song_title = "Good Morning")
.libPaths()
search_url
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res
genius_token <- Sys.getenv('GENIUS_API_TOKEN')
get_lyrics_search(artist_name = "Kanye West",
song_title = "Good Morning")
request_song_info <- function(song_name, artist) {
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
# print(hits)
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
return(url)
}
url_list <- list()
# Manual fix names
songs <- read_csv("songs-73.csv")
for (i in 1:nrow(songs)) {
print(i)
row <- songs[i,]
try({
song <- row$song
artist <- row$artist
print(paste0("Getting url for '", song, "' by ", artist))
url <- request_song_info(song, artist)
print(url)
x <- tibble(
song,
artist,
url
)
url_list[[length(url_list) + 1]] <- x
})
}
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
res
library(httr)
library(jsonlite)
library(readr)
library(dplyr)
genius_token <- Sys.getenv('GENIUS_API_TOKEN')
get_lyrics_search(artist_name = "Kanye West",
song_title = "Good Morning")
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
res_json
genius_token <- '3ntKCti_Xb4Uvll2tXhPL1aN4WLq821lR-jhjtDhj9Gd43pRH9jvlTFI_zM86G1LmQb_aqTgIlM_gOcbZTqNVA'
request_song_info <- function(song_name, artist) {
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
# print(hits)
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
return(url)
}
url_list <- list()
# Manual fix names
songs <- read_csv("songs-73.csv")
for (i in 1:nrow(songs)) {
print(i)
row <- songs[i,]
try({
song <- row$song
artist <- row$artist
print(paste0("Getting url for '", song, "' by ", artist))
url <- request_song_info(song, artist)
print(url)
x <- tibble(
song,
artist,
url
)
url_list[[length(url_list) + 1]] <- x
})
}
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
res
res_json <- fromJSON(rawToChar(res$content))
res_json
genius_token <- 'tWYB4-Rd6_7DJMz8QSr-6Zbqjx0l7kSCgMFJzIvW53mbUBZ6-q_QNkEoAp4QvNgs'
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
res_json
genius_token <- 'ns5R9DqwLyAMLn0mZSYeGbCe01c5E37FCVMDehk8CuP2uG4RLrtX76nGDCTXY7NI'
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
res_json
genius_token <- 'ns5R9DqwLyAMLn0mZSYeGbCe01c5E37FCVMDehk8CuP2uG4RLrtX76nGDCTXY7NI'
request_song_info <- function(song_name, artist) {
base_url = 'https://api.genius.com'
headers = c("Authorization" = paste0("Bearer ", genius_token))
search_url = URLencode(paste0(base_url, '/search?q=', song_name, ' ', artist))
res <- GET(search_url, add_headers(headers))
res_json <- fromJSON(rawToChar(res$content))
hits <- res_json$response$hits
# print(hits)
url <- ''
normalize_name <- function(str) {
gsub("[[:punct:]]", "", gsub("&", "and", tolower(str)))
}
for (i in 1:nrow(res_json$response$hits)) {
row <- res_json$response$hits[i,]
if (normalize_name(artist) == normalize_name(row$result$artist_names)) {
url <- row$result$url
}
}
return(url)
}
url_list <- list()
# Manual fix names
songs <- read_csv("songs-73.csv")
for (i in 1:nrow(songs)) {
print(i)
row <- songs[i,]
try({
song <- row$song
artist <- row$artist
print(paste0("Getting url for '", song, "' by ", artist))
url <- request_song_info(song, artist)
print(url)
x <- tibble(
song,
artist,
url
)
url_list[[length(url_list) + 1]] <- x
})
}
url_df <- bind_rows(url_list) %>%  distinct()
View(url_df)
write_csv(url_df, "url_df.csv")
url_df <- read_csv("url_df.csv")
lyrics_list <- list()
for (i in 1:nrow(url_df)) {
print(i)
row <- url_df[i,]
# if (!is.na(url)) {
try({
song <- row$song
artist <- row$artist
url <- row$url
print(paste0("Getting lyrics for '", song, "' by ", artist))
html <- read_html(url)
lyrics <- html %>%
html_node('div[data-lyrics-container=true]') %>%
html_text()
print(substr(lyrics, 1, 50))
x <- tibble(
song,
artist,
url,
lyrics
)
lyrics_list[[length(lyrics_list) + 1]] <- x
})
# }
}
library(rvest)
url_df <- read_csv("url_df.csv")
lyrics_list <- list()
for (i in 1:nrow(url_df)) {
print(i)
row <- url_df[i,]
# if (!is.na(url)) {
try({
song <- row$song
artist <- row$artist
url <- row$url
print(paste0("Getting lyrics for '", song, "' by ", artist))
html <- read_html(url)
lyrics <- html %>%
html_node('div[data-lyrics-container=true]') %>%
html_text()
print(substr(lyrics, 1, 50))
x <- tibble(
song,
artist,
url,
lyrics
)
lyrics_list[[length(lyrics_list) + 1]] <- x
})
# }
}
lyrics_df <- bind_rows(lyrics_list) %>%  distinct()
View(lyrics_df)
lyrics_df <- bind_rows(lyrics_list) %>%  distinct() %>% mutate(lyrics = gsub("\\[.*?\\]", "", lyrics))
View(lyrics_df)
write_csv(lyrics_df, "lyrics_df", na = '')
write_csv(lyrics_df, "lyrics_df.csv", na = '')
